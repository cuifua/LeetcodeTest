package com.top100.F_Tree.DFSdeep;

import com.top100.F_Tree.TreeNode;

/*
【题目】给定两个二叉树，想象当你将它们中的一个覆盖到另一个上时，两个二叉树的一些节点便会重叠。
你需要将他们合并为一个新的二叉树。合并的规则是如果两个节点重叠，那么将他们的值相加作为节点合并后的新值，否则不为?NULL 的节点将直接作为新二叉树的节点。

【例题】

输入:
	Tree 1                     Tree 2
          1                         2
         / \                       / \
        3   2                     1   3
       /                           \   \
      5                             4   7
输出:
合并后的树:
	     3
	    / \
	   4   5
	  / \   \
	 5   4   7
注意:合并必须从两个树的根节点开始。
 */
public class MergeTree_617
{
    public TreeNode merge(TreeNode t1, TreeNode t2)
    {
        if(t1 == null || t2 == null)
        {
            return t1 == null ? t2 : t1;
        }

        return dfs(t1,t2);
    }

    public TreeNode dfs(TreeNode v1, TreeNode v2)
    {
        v1.val += v2.val;
        v1.left = dfs(v1.left,v2.left);
        v1.right = dfs(v1.right,v2.right);
        return v1;
    }
}
